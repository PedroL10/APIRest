package com.REST.API.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.REST.API.model.Person;
import com.REST.API.services.PersonServices;


@RestController
@RequestMapping("/person")
public class PersonController {	
	
	@Autowired
	private PersonServices service;
	//private PersonServices service = new PersonService();Injeção de dependencia
	
	@GetMapping(value = "/{id}" , produces = MediaType.APPLICATION_JSON_VALUE)
	public Person findById(@PathVariable(value = "id") Long id) throws Exception{		
		
		return service.findById(id);
	}	
	
	/*
	@RequestMapping(value = "/{id}" , method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE)
	public Person findById(@PathVariable(value = "id") String id) throws Exception{		
		
		return service.findById(id);
	}	
	*/
	
	@RequestMapping( method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE)
	public List<Person> findAll() throws Exception{		
		
		return service.findAll();
	}	


	@RequestMapping(method=RequestMethod.POST,
			consumes = MediaType.APPLICATION_JSON_VALUE,
			produces = MediaType.APPLICATION_JSON_VALUE)
			
	public Person create(@RequestBody Person person) {
		return service.create(person);
	}
	
	@RequestMapping(method=RequestMethod.PUT,
			consumes = MediaType.APPLICATION_JSON_VALUE,
			produces = MediaType.APPLICATION_JSON_VALUE)
			
	public Person update(@RequestBody Person person) {
		return service.update(person);
	}

	@RequestMapping(value = "{id}", method=RequestMethod.DELETE)			
	public void delete(@PathVariable(value = "id") Long id) {
		service.delete(id);
	}

	
}